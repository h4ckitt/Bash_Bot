#!/bin/bash

#Chat Id
Chat_Id=$1
set --

[ ! -z $Chat_Id ] || {
	echo "No Chat Id Specified, Exiting"
	exit 1
	}
declare -A commands
commands=(
		["myid"]="echo Your User ID is: @USERID"
		["hi"]="echo Hello, $1"
		["myuser"]="echo Your Username is: @USERNAME"
		["fetchmail"]="./bin/mail_fetch"
		["start"]="echo Hola, $1"
		["help"]="echo Hiyah, $1"
		["tikdown"]="./bin/tikdown"
		["unilag"]="./bin/Autologin "$@""
)

FIRSTRUN=0
if [ ! -f updates/$Chat_Id.lastupdate ]; then
	echo 0 > updates/$Chat_Id.lastupdate
fi
[ -d docs/creds ] || mkdir docs/creds
[ -d docs/creds/$Chat_Id ] || mkdir docs/creds/$Chat_Id
[ -d output ] || mkdir output
[ -d output/$Chat_Id ] || mkdir output/$Chat_Id

echo -e "New Session Started For $Chat_Id......\n"
echo ""
LastMsgId=0
prev_ChatId=0
getUserDetails(){
    delim="$1"
    shift
    url="$(sed 's@\"@@g' <<< $1)"
    url="$(sed 's@.*chat\"\:@@' <<< $url | tr -d '}' | tr -d '{' | tr -d ']')"
    shift
    echo $(sed 's@.*\<'$delim'\>\:@@' <<< "$url" | sed 's@\,.*@@')
}
run_command(){
		${commands[$command]} $1
		return
}
check_valid(){
		text="$1"
		shift
		Username="$1"
		shift
		export Chat_Id="$1"
		for command in "${!commands[@]}"; do
		if [[ "$( tr '[:upper:]' '[:lower:]' <<< $text)" =~ "$command" ]]; then
			case $(tr '[:upper:]' '[:lower:]' <<< $text) in
		*"fetchmail"*) arg=$(sed 's@.*fetchmail@@' <<< $text | sed 's/ //')
						if [ -z $arg ]; then
						if [ ! -f "./docs/creds/$Chat_Id/gmail_cred" ]; then
						curl -s -d "text=Whoops, You Don't Seem To Have Registered Your Credentials Yet, Use /fetchmail register To Get Started" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						return
						fi
			  			run_command $arg
						if [ -f output/$Chat_Id/Your_Mail ]; then
						curl -s -d "text=Hi, $Username, Here's Your Mail Update, $x" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						curl -s -F document=@"output/$Chat_Id/Your_Mail" -F "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendDocument" >/dev/null 2>&1
						rm -rf output/$Chat_Id/Your_Mail
						else
						curl -s -d "text=There's Been An Issue With Your Request, Verify Your Credentials And Make Sure You Have Turned On Access For Less Secure Apps" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						fi
						else
						case $(tr '[:upper:]' '[:lower:]' <<< $arg) in
						"register")
						if [ -f "./docs/creds/$Chat_Id/gmail_cred" ]; then
						read -r this_user < ./docs/creds/$Chat_Id/gmail_cred
						curl -s -d "text=Overwriting Credentials For $this_user" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						fi
						curl -s -d "text=What's Your Email?" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						guser=$(get_updates response)
						echo $(sed 's@|.*@@' <<< $guser | sed 's/[[:space:]]//g') > ./docs/creds/$Chat_Id/gmail_cred
						mid=$(sed 's@.*|@@' <<< $guser | sed 's/[[:space:]]//g')
						curl -s -d "text=Nice, Now What's Your Password?" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						gpass=$(get_updates response)
						echo $(sed 's@|.*@@' <<< $gpass | sed 's/[[:space:]]//g') >> ./docs/creds/$Chat_Id/gmail_cred
						gpass_id=$(sed 's@.*|@@' <<< $gpass | sed 's/[[:space:]]//g')
						curl -s -d "text=Twinkle Twinkle Little Star, How Would You Love A Date To The Spa .........., Oh Btw, Your Credentials Are Saved Already." -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
						for i in $mid $gpass_id
							do
								curl -s -d "message_id=$i" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/deleteMessage" >/dev/null 2>&1
						done
						;;
						*) curl -s -d "text=That Ain't A Valid Argument, Use /help To See The Help Text For More Info On Usage" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1;;
						esac
						fi
						return
					;;
	*"tikdown"*) arg=$(sed 's@.*tikdown@@' <<< $text | sed 's/ //')
				if [ -z $arg ]; then
				curl -s -d "text=No Link Specified, Re-run The Command With A Valid Tiktok Link" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				return
				else
				curl -s -d "text=Your File Is Downloading, It Will Get Sent To You In A Moment" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				run_command $arg
				if [ -f file.mp4 ]; then
				curl -s -F video=@"file.mp4" -F "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendVideo" >/dev/null 2>&1
				curl -s -d "text=Here You Go $Username" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				rm -rf file.mp4
				else
				curl -s -d "text=There's Been An Issue With Your Request, Verify The Link And Try Again" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				fi
				fi
				return
				;;
	*"unilag"*) arg=$(sed 's|.*unilag||' <<< $text | sed 's| ||')
				if [ -z $arg ]; then
				curl -s -d "text=No Arguments Sent, Please Add An Argument Or Check The Help Text With /help And Try Again" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				return
				else
				case $(tr '[:upper:]' '[:lower:]' <<< $arg) in
				"register")
				if [ -f "./docs/creds/$Chat_Id/unilag_cred" ]; then
				read -r this_user < ./docs/creds/$Chat_Id/unilag_cred
				curl -s -d "text=Overwriting Credentials For $this_user" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				fi
				curl -s -d "text=What Is Your Username/Matric-Number?" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				unilag_user=$(get_updates response)
				echo $(sed 's@|.*@@' <<< $unilag_user | sed 's/[[:space:]]//g') > ./docs/creds/$Chat_Id/unilag_cred
				user_id=$(sed 's@.*|@@' <<< $unilag_user | sed 's/[[:space:]]//g')
				curl -s -d "text=Great, Now What's Your Password?" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				unilag_password=$(get_updates response)
				echo $(sed 's@|.*@@' <<< $unilag_password | sed 's/[[:space:]]//g') >> ./docs/creds/$Chat_Id/unilag_cred
				password_id=$(sed 's@.*|@@' <<< $unilag_password | sed 's/[[:space:]]//g')
				curl -s -d "text=Skidaddle Skidoodle, Your Credentials Are Now Noodles %F0%9F%8D%9D .........., Just Kidding, Your Credentials Are Saved Already." -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				for i in $user_id $password_id
					do
						curl -s -d "message_id=$i" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/deleteMessage" >/dev/null 2>&1
				done
				;;
				"courseform")
				if [ ! -f "./docs/creds/$Chat_Id/unilag_cred" ]; then
				curl -s -d "text=Whoops, You Don't Seem To Have Registered Your Credentials Yet, Use /unilag register To Get Started" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				return
				fi
				run_command $arg
				x=$(cat temp)
				curl -s -d "text=$x" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				curl -s -d "text=Choose A Session And Semester i.e The Number In Front Of The Choices" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				x=$(get_updates response)
				x=$(sed 's@|.*@@' <<< $x | sed 's/[[:space:]]//g')
				curl -s -d "text=Please Chillabit While I Go Fetch It. %F0%9F%8F%83%F0%9F%92%A8" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				run_command $x
				if [ -f output/$Chat_Id/CourseRegistration.pdf ]; then
				curl -s -d "text=Got It, Here's Your Course Form %F0%9F%98%B8	" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1
				curl -s -F document=@"output/$Chat_Id/CourseRegistration.pdf" -F "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendDocument" >/dev/null 2>&1
				rm -rf output/$Chat_Id/CourseRegistration.pdf
				fi
				;;
				*) curl -s -d "text=That Definitely Is Not A Valid Argument, Use /help To See The Help Text For More Info On Usage" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1;;
				esac
				fi
				return
				;;
	*"start"*) res=$(run_command $Username; if [ ! $(cat updates/$Chat_Id.lastupdate) -gt 1 ]; then cat ./docs/help_text; fi); curl -s -d "text=$res" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1; return;;
	*"help"*)  res=$(run_command $Username; cat ./docs/help_text); curl -s -d "text=$res" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1; return;;
	*)	response=$(run_command $Username); curl -s -d "text=$response" -d "chat_id=$Chat_Id" "https://api.telegram.org/bot$token/sendMessage" >/dev/null 2>&1;return;;
#			echo "$command Received, Running '${commands[$command]}'"
		esac
	fi
done
}
get_updates(){
while :
	do
		NEW_MSG=$(curl --silent "https://api.telegram.org/bot$token/getUpdates" | sed '1d')
		if [ ! -z "$NEW_MSG" ]; then
		while read -r msg || [[ -n $msg ]]; do
			read -r update < updates/$Chat_Id.lastupdate
			msg_Chat_Id=$(getUserDetails id $msg)
			if [ $msg_Chat_Id -eq $Chat_Id ]; then
			MsgId=$(sed 's@.*message_id\"\:@@' <<< $msg | tr -d '}' | tr -d '{' | tr -d '\"' | tr -d ']' | sed 's|\,.*||')
			if [ $MsgId -gt $update ]; then
			echo $MsgId > updates/$Chat_Id.lastupdate
			Username=$(getUserDetails first_name $msg)
			Text=$(getUserDetails text "$msg")
			LastMsgId=$(sed 's@.*message_id\"\:@@' <<< $msg | tr -d '}' | tr -d '{' | tr -d '\"' | tr -d ']' | sed 's|\,.*||')
			if [ -z "$1" ]; then
			echo "Message From $Username: $Text"
			check_valid "$Text" $Username $msg_Chat_Id
			else
			echo "$Text|$MsgId"
			return
			fi
			fi
			fi
		done <<< $NEW_MSG
		fi
	sleep $interval
done
}
get_updates
